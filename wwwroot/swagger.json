{
  "openapi": "3.0.1",
  "info": {
    "title": "Cloud Services Team - Open API Documentation",
    "description": "The set of production APIs managed and hosted by the Cloud Services Team",
    "contact": {
      "name": "Cloud Services Team",
      "url": "https://github.com/ACMEAtronOmatic/swagger-docs/issues",
      "email": "cloud-services-aaaad2qfvlaol7s3ab4ud5kwxu@acmeaom.slack.com"
    },
    "version": "v3.0.2"
  },
  "servers": [
    {
      "url": "https://localhost:7071"
    },
    {
      "url": "https://accounts.acmeaom.com",
      "description": "Accounts APIs Host"
    },
    {
      "url": "https://authc.acmeaom.com",
      "description": "AuthC APIs Host"
    },
    {
      "url": "https://billing.acmeaom.com",
      "description": "Billing APIs Host"
    },
    {
      "url": "https://climatestripe.acmeaom.com",
      "description": "ClimateStripe APIs Host"
    },
    {
      "url": "https://cyclones.acmeaom.com",
      "description": "Cyclones APIs Host"
    },
    {
      "url": "https://cycloneshistoric.acmeaom.com",
      "description": "Cyclones Historic APIs Host"
    },
    {
      "url": "https://devices.acmeaom.com",
      "description": "Devices APIs Host"
    },
    {
      "url": "https://etc.acmeaom.com",
      "description": "Etc APIs Host"
    },
    {
      "url": "https://fronts.acmeaom.com",
      "description": "Fronts APIs Host"
    },
    {
      "url": "https://geocode.acmeaom.com",
      "description": "GeoCodes.net APIs Host"
    },
    {
      "url": "https://hotspots.acmeaom.com",
      "description": "HotSpots APIs Host"
    },
    {
      "url": "https://lightning.acmeaom.com",
      "description": "Lightning APIs Host"
    },
    {
      "url": "https://livestreams.acmeaom.com",
      "description": "Live Streams APIs Host"
    },
    {
      "url": "https://marsphotos.acmeaom.com",
      "description": "Mars Photos APIs Host"
    },
    {
      "url": "https://newsarticles.acmeaom.com",
      "description": "News Articles APIs Host"
    },
    {
      "url": "https://outlooks.acmeaom.com",
      "description": "Outlooks APIs Host"
    },
    {
      "url": "https://photos.acmeaom.com",
      "description": "Photo APIs Host"
    },
    {
      "url": "https://phototiles.acmeaom.com",
      "description": "Photo Tiles APIs Host"
    },
    {
      "url": "https://platebounds.acmeaom.com",
      "description": "Plate Boundary APIs Host"
    },
    {
      "url": "https://poweroutages.acmeaom.com",
      "description": "Power Outages APIs Host"
    },
    {
      "url": "https://quakes.acmeaom.com",
      "description": "Quake APIs Host"
    },
    {
      "url": "https://registration.acmeaom.com",
      "description": "Registration APIs Host"
    },
    {
      "url": "https://satellites.acmeaom.com",
      "description": "Satellites APIs Host"
    },
    {
      "url": "https://smoke.acmeaom.com",
      "description": "Smoke APIs Host"
    },
    {
      "url": "https://tags.acmeaom.com",
      "description": "Tags APIs Host"
    },
    {
      "url": "https://wildfires.acmeaom.com",
      "description": "Wildfires APIs Host"
    },
    {
      "url": "https://windspeeds.acmeaom.com",
      "description": "Wind Speeds APIs Host"
    }
  ],
  "paths": {
    "/v1/winds/current/noaa/arrivals": {
      "get": {
        "tags": [
          "Wind_Speeds_[windspeeds.acmeaom.com]"
        ],
        "summary": "Gets times-of-arrival features",
        "description": "This gets the tropical winds times-of-arrival contour features.",
        "operationId": "GetWindSpeedArrivalsV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/winds/current/noaa/probabilities": {
      "get": {
        "tags": [
          "Wind_Speeds_[windspeeds.acmeaom.com]"
        ],
        "summary": "Gets probabilities features",
        "description": "This gets the tropical wind probabilities features.",
        "operationId": "GetWindSpeedProbabilitiesV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/winds/noaa/current": {
      "get": {
        "tags": [
          "Wind_Speeds_[windspeeds.acmeaom.com]"
        ],
        "summary": "Gets wind-speed features",
        "description": "This gets combined tropical wind probabilities and arrival contours.",
        "operationId": "GetWindSpeedsV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v4/wildfires/current/all ": {
      "get": {
        "tags": [
          "Wildfires_[wildfires.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns all wildfires",
        "operationId": "GetAllWildfiresV4Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v5/wildfires/current/all ": {
      "get": {
        "tags": [
          "Wildfires_[wildfires.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns all wildfires",
        "operationId": "GetAllWildfiresV5Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v4/wildfires/current/large ": {
      "get": {
        "tags": [
          "Wildfires_[wildfires.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns large wildfires",
        "operationId": "GetLargeWildfiresV4Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v5/wildfires/current/large ": {
      "get": {
        "tags": [
          "Wildfires_[wildfires.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns large wildfires",
        "operationId": "GetLargeWildfiresV5Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/tags/android/{deviceId}/{revision}": {
      "put": {
        "tags": [
          "Tags_[tags.acmeaom.com]"
        ],
        "summary": "Submit updated tags for an Android device",
        "description": "Submit a dictionary of updated tags for an Android device.",
        "operationId": "UpdateTagsAndroidV2",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "204": {
            "description": "The request was handled synchronously.",
            "x-ms-summary": "The request was handled."
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/tags/ios/{deviceId}/{revision}": {
      "put": {
        "tags": [
          "Tags_[tags.acmeaom.com]"
        ],
        "summary": "Submit updated tags for an iOS device",
        "description": "Submit a dictionary of updated tags for an iOS device.",
        "operationId": "UpdateTagsIosV2",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "204": {
            "description": "The request was handled synchronously.",
            "x-ms-summary": "The request was handled."
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/tags/{deviceId}/{revision}": {
      "put": {
        "tags": [
          "Tags_[tags.acmeaom.com]"
        ],
        "summary": "Submit updated tags for a device",
        "description": "Submit a dictionary of updated tags for a device.",
        "operationId": "UpdateTagsRevisionV2",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "204": {
            "description": "The request was handled synchronously.",
            "x-ms-summary": "The request was handled."
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v1/tags": {
      "put": {
        "tags": [
          "Tags_[tags.acmeaom.com]"
        ],
        "summary": "Submit updated tags for a device",
        "description": "Submit a dictionary of updated tags for a device.",
        "operationId": "UpdateTagsV1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "204": {
            "description": "The request was handled synchronously.",
            "x-ms-summary": "The request was handled."
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v2/tags/{deviceId}": {
      "put": {
        "tags": [
          "Tags_[tags.acmeaom.com]"
        ],
        "summary": "Submit updated tags for a device",
        "description": "Submit a dictionary of updated tags for a device.",
        "operationId": "UpdateTagsV2",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "204": {
            "description": "The request was handled synchronously.",
            "x-ms-summary": "The request was handled."
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v2/tags/windows/{deviceId}/{revision}": {
      "put": {
        "tags": [
          "Tags_[tags.acmeaom.com]"
        ],
        "summary": "Submit updated tags for a Windows device",
        "description": "Submit a dictionary of updated tags for an Windows device.",
        "operationId": "UpdateTagsWindowsV2",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revision",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "204": {
            "description": "The request was handled synchronously.",
            "x-ms-summary": "The request was handled."
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/smoke/noaa/current ": {
      "get": {
        "tags": [
          "Smoke_[smoke.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "GetCurrentNoaaSmokeV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/smoke/legend/metadata ": {
      "get": {
        "tags": [
          "Smoke_[smoke.acmeaom.com]"
        ],
        "summary": "GetLegendMetadataV1Api",
        "description": "Had to qualify the function name to allow swagger-docs to compile properly because it conflicted with function in HotSpots.",
        "operationId": "GetSmokeLegendMetadataV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/legendMetadataV1"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/satellites/curated/featured ": {
      "get": {
        "tags": [
          "Satellites_[satellites.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "GetFeaturedSatellitesV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/satellitesV1"
                  }
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/orbits/{id}/3le ": {
      "get": {
        "tags": [
          "Satellites_[satellites.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "GetOrbit3LEV1Api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/satellites/{id}": {
      "get": {
        "tags": [
          "Satellites_[satellites.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "GetSatelliteByIdV1Api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/satellitesV1"
                  }
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/poi/{planet} ": {
      "get": {
        "tags": [
          "Routes_[routes.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetPointsOfInterestV2",
        "parameters": [
          {
            "name": "planet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/routes/{planet}/rovers/{name} ": {
      "get": {
        "tags": [
          "Routes_[routes.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetRoverRouteByNameV1",
        "parameters": [
          {
            "name": "planet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/routes/{planet}/rovers/{name} ": {
      "get": {
        "tags": [
          "Routes_[routes.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetRoverRouteByNameV2",
        "parameters": [
          {
            "name": "planet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v3/routes/{planet}/rovers/{name} ": {
      "get": {
        "tags": [
          "Routes_[routes.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetRoverRouteByNameV3",
        "parameters": [
          {
            "name": "planet",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/authorize/{token}": {
      "get": {
        "tags": [
          "Registration_[registration.acmeaom.com]"
        ],
        "summary": "Submits a  request for a new account registration.",
        "description": "This route is called when the user clicks on a 'verify link' thereby proving that they are authorized for the provided identity (email or mobile number).",
        "operationId": "AuthorizeRegistrationApi",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The request was accepted"
          },
          "302": {
            "description": "The request was completed and user is redirected to welcome page.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The request was."
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The resource was not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/registrations": {
      "post": {
        "tags": [
          "Registration_[registration.acmeaom.com]"
        ],
        "summary": "Submits a  request for a new account registration.",
        "description": "Begins the process of registering a device by verifying a user's identity (by email or phone #).",
        "operationId": "CreateRegistration",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Verification email was sent and Registration is now pending verification.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The request was accepted"
          },
          "400": {
            "description": "The request has been determined as a Bad Request because it was either an Incomplete Request or the request was made by an Unsupported Role.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The request "
          },
          "409": {
            "description": "A registration is already pending on this account. For more info refer to https://acmeaom.freshdesk.com/support/solutions/articles/44001866053.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "A conflict occurred with the request."
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/registrations/{regToken}": {
      "get": {
        "tags": [
          "Registration_[registration.acmeaom.com]"
        ],
        "summary": "Looks up a registration request by reg_token.",
        "description": "This route allows for clients to determine if a registration exists and if so what status it is in.",
        "operationId": "GetRegistration",
        "parameters": [
          {
            "name": "regToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getRegistrationV2ResponseData"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "202": {
            "description": "The the registration has successfully completed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The regisration was accepted"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "409": {
            "description": "The request could not be processed because of conflict in the request",
            "x-ms-summary": "Conflict"
          },
          "422": {
            "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The request entity could not be processed."
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/registrations/{installId}": {
      "delete": {
        "tags": [
          "Registration_[registration.acmeaom.com]"
        ],
        "summary": "Submits a request to remove registration",
        "description": "The request will remove a registration by installId",
        "operationId": "RemoveRegistration",
        "parameters": [
          {
            "name": "installId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request to remove registration has been accepted and will be handled asynchronously",
            "x-ms-summary": "The request was accepted"
          },
          "404": {
            "description": "The requested installId was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The installId was not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/details/{environment}/{provider}/{version}/{id}.json": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets the earthquake detail",
        "description": "Returns the detail for an earthquake [quakes.acmeaom.com].",
        "operationId": "GetQuakeDetail",
        "parameters": [
          {
            "name": "environment",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                0,
                1
              ],
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                0
              ],
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a JSON representation of the earthquake detail.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/earthquakeDetail"
                }
              }
            },
            "x-ms-summary": "Earthquake detail."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/significant/hour": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Significant earthquakes in the last Hour",
        "description": "Returns the set of Significant earthquakes that occurred in the last Hour [quakes.acmeaom.com].",
        "operationId": "GetCurrentSignificantHourQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/significant/day": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Significant earthquakes in the last Day",
        "description": "Returns the set of Significant earthquakes that occurred in the last Day.",
        "operationId": "GetCurrentSignificantDayQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/significant/week": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Significant earthquakes in the last Week",
        "description": "Returns the set of Significant earthquakes that occurred in the last Week.",
        "operationId": "GetCurrentSignificantWeekQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/significant/month": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Significant earthquakes in the last Month",
        "description": "Returns the set of Significant earthquakes that occurred in the last Month.",
        "operationId": "GetCurrentSignificantMonthQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag45/hour": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag45 earthquakes in the last Hour",
        "description": "Returns the set of Mag45 earthquakes that occurred in the last Hour.",
        "operationId": "GetCurrentMag45HourQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag45/day": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag45 earthquakes in the last Day",
        "description": "Returns the set of Mag45 earthquakes that occurred in the last Day.",
        "operationId": "GetCurrentMag45DayQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag45/week": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag45 earthquakes in the last Week",
        "description": "Returns the set of Mag45 earthquakes that occurred in the last Week.",
        "operationId": "GetCurrentMag45WeekQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag45/month": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag45 earthquakes in the last Month",
        "description": "Returns the set of Mag45 earthquakes that occurred in the last Month.",
        "operationId": "GetCurrentMag45MonthQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag25/hour": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag25 earthquakes in the last Hour",
        "description": "Returns the set of Mag25 earthquakes that occurred in the last Hour.",
        "operationId": "GetCurrentMag25HourQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag25/day": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag25 earthquakes in the last Day",
        "description": "Returns the set of Mag25 earthquakes that occurred in the last Day.",
        "operationId": "GetCurrentMag25DayQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag25/week": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag25 earthquakes in the last Week",
        "description": "Returns the set of Mag25 earthquakes that occurred in the last Week.",
        "operationId": "GetCurrentMag25WeekQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag25/month": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag25 earthquakes in the last Month",
        "description": "Returns the set of Mag25 earthquakes that occurred in the last Month.",
        "operationId": "GetCurrentMag25MonthQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag10/hour": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag10 earthquakes in the last Hour",
        "description": "Returns the set of Mag10 earthquakes that occurred in the last Hour.",
        "operationId": "GetCurrentMag10HourQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag10/day": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag10 earthquakes in the last Day",
        "description": "Returns the set of Mag10 earthquakes that occurred in the last Day.",
        "operationId": "GetCurrentMag10DayQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag10/week": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag10 earthquakes in the last Week",
        "description": "Returns the set of Mag10 earthquakes that occurred in the last Week.",
        "operationId": "GetCurrentMag10WeekQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/mag10/month": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets Mag10 earthquakes in the last Month",
        "description": "Returns the set of Mag10 earthquakes that occurred in the last Month.",
        "operationId": "GetCurrentMag10MonthQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/all/hour": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets All earthquakes in the last Hour",
        "description": "Returns the set of All earthquakes that occurred in the last Hour.",
        "operationId": "GetCurrentAllHourQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/all/day": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets All earthquakes in the last Day",
        "description": "Returns the set of All earthquakes that occurred in the last Day.",
        "operationId": "GetCurrentAllDayQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/all/week": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets All earthquakes in the last Week",
        "description": "Returns the set of All earthquakes that occurred in the last Week.",
        "operationId": "GetCurrentAllWeekQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/earthquakes/all/month": {
      "get": {
        "tags": [
          "Quakes_[quakes.acmeaom.com]"
        ],
        "summary": "Gets All earthquakes in the last Month",
        "description": "Returns the set of All earthquakes that occurred in the last Month.",
        "operationId": "GetCurrentAllMonthQuakesV2",
        "responses": {
          "200": {
            "description": "Returns a GeoJSON representation of the earthquakes in the set.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns GeoJSON for the set."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/profile": {
      "get": {
        "tags": [
          "Profiles_[profiles.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetProfile",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/profileV1"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      },
      "patch": {
        "tags": [
          "Profiles_[profiles.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "PatchProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateProfileRequestDataV1"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request has been accepted."
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "409": {
            "description": "The request could not be processed because of conflict in the request",
            "x-ms-summary": "Conflict"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/consent/content/{locale}": {
      "get": {
        "tags": [
          "Privacy_[privacy.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetConsentContentV11",
        "parameters": [
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/consent/{locale}": {
      "get": {
        "tags": [
          "Privacy_[privacy.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetConsentContentV1",
        "parameters": [
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "405": {
            "description": "This request is not allowed.",
            "x-ms-summary": "Not allowed"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/ipcountry": {
      "get": {
        "tags": [
          "Privacy_[privacy.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetIpCountryV1",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/protection": {
      "get": {
        "tags": [
          "Privacy_[privacy.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetProtectionV1",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/consent/accept": {
      "post": {
        "tags": [
          "Privacy_[privacy.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "SubmitConsentAcceptV1",
        "responses": {
          "200": {
            "description": "Returns the JSON representation of the response to the submission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns a submission response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/consent/accept/{installId}": {
      "post": {
        "tags": [
          "Privacy_[privacy.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "SubmitConsentAcceptV2",
        "parameters": [
          {
            "name": "installId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/submitConsentRequestDataV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the JSON representation of the response to the submission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns a submission response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/consent/decline": {
      "post": {
        "tags": [
          "Privacy_[privacy.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "SubmitConsentDeclineV1",
        "responses": {
          "200": {
            "description": "Returns the JSON representation of the response to the submission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns a submission response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/consent/decline/{installId}": {
      "post": {
        "tags": [
          "Privacy_[privacy.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "SubmitConsentDeclineV2",
        "parameters": [
          {
            "name": "installId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/submitConsentRequestDataV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the JSON representation of the response to the submission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "Returns a submission response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/contents/{feed}/{product}/{database}/{id}/{timestamp}/locale/{locale}": {
      "get": {
        "tags": [
          "PowerOutages_[poweroutages.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetContentByLocaleV1Api",
        "parameters": [
          {
            "name": "feed",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "database",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/outages/current ": {
      "get": {
        "tags": [
          "PowerOutages_[poweroutages.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetCurrentOutagesV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/outages/nearby": {
      "get": {
        "tags": [
          "PowerOutages_[poweroutages.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetNearbyOutagesByLatLonV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/faultzones": {
      "get": {
        "tags": [
          "Plate_Boundaries_[platebounds.acmeaom.com]"
        ],
        "summary": "Gets the current fault zones",
        "description": "This gets the name.",
        "operationId": "GetFaultZonesV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/plateboundaries": {
      "get": {
        "tags": [
          "Plate_Boundaries_[platebounds.acmeaom.com]"
        ],
        "summary": "Gets the current plate boundaries",
        "description": "This gets the name.",
        "operationId": "GetPlateBoundariesV1",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/plateinterfaces": {
      "get": {
        "tags": [
          "Plate_Boundaries_[platebounds.acmeaom.com]"
        ],
        "summary": "Gets the current plate interfaces",
        "description": "This gets the name.",
        "operationId": "GetPlateInterfacesV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/best/{zoom}/{x}/{y}": {
      "get": {
        "tags": [
          "PhotoTiles_[phototiles.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetBestPhotoApi",
        "parameters": [
          {
            "name": "zoom",
            "in": "path",
            "description": "zoom portion of quad key [0-19]",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "x",
            "in": "path",
            "description": "x portion of quad key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "y",
            "in": "path",
            "description": "y portion of quad key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/topn/{zoom}/{x}/{y}": {
      "get": {
        "tags": [
          "PhotoTiles_[phototiles.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetTopPhotosApi",
        "parameters": [
          {
            "name": "zoom",
            "in": "path",
            "description": "zoom portion of quad key [0-19]",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "x",
            "in": "path",
            "description": "x portion of quad key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "y",
            "in": "path",
            "description": "y portion of quad key",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/{photoId}/comments": {
      "put": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Add Comment Api V1",
        "description": "",
        "operationId": "AddCommentV1Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mrs-user-email",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mrs-device-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "412": {
            "description": "The request failed to complete because a precondition was not met.",
            "x-ms-summary": "Precondition Failed"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      },
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Get Comments API V1",
        "description": "",
        "operationId": "GetCommentsV1Api",
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/photoCommentV1"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/{photoId}/comments": {
      "post": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Add Comment Api V2",
        "description": "",
        "operationId": "AddCommentV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "412": {
            "description": "The request failed to complete because a precondition was not met.",
            "x-ms-summary": "Precondition Failed"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      },
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Get Comments API V2",
        "description": "",
        "operationId": "GetCommentsV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/photoCommentV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/{photoId}/flags/{userId}": {
      "put": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Flag Photo Api V1",
        "description": "",
        "operationId": "FlagPhotoV1Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          }
        },
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "UnflagPhotoV1Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/{photoId}/flags": {
      "put": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Flag Photo Api V2",
        "description": "",
        "operationId": "FlagPhotoV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "UnflagPhotoV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/background": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Get Background Photos Api V1",
        "description": "",
        "operationId": "GetBackgroundPhotosV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/{photoId}/image": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Retrieve Photo by Id API V2",
        "description": "Retrieve photo and redirect to a web page to display it with it's watermark.",
        "operationId": "GetImageV1Api",
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "This redirects to https://pics2.acmeaom.com/watermarks/<photoId>.jpg",
            "x-ms-summary": "The request will be redirected"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/my-ids": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Get My Photo Ids Api V2",
        "description": "Returns a list of photo ids - defaults to 100 if 'top' parameter is not specified.",
        "operationId": "GetMyPhotoIdsV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/my-markers": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Get Photo Markers Api V2",
        "description": "Returns a list of photo ids with location - defaults to 100 if 'top' parameter is not specified.",
        "operationId": "GetMyPhotoMarkersV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "Limit the number of returned IDs (default 100)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/my": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Get My Photos Api V1",
        "description": "",
        "operationId": "GetMyPhotosV1Api",
        "parameters": [
          {
            "name": "x-mrs-user-email",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mrs-device-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeLocation",
            "in": "query",
            "description": "Return the photo ID and location using an alternative CSV format",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "Limit the number of returned IDs (default 100)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/text"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/{photoId}/vote": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetMyVoteV2Api",
        "parameters": [
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/near": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetNearbyPhotosV1Api",
        "parameters": [
          {
            "name": "la",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/new": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetNewestPhotosV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/{photoId}/data": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetPhotoDataV2Api",
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/photoV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetPhotosV1Api",
        "parameters": [
          {
            "name": "x-mrs-user-email",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-mrs-device-id",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeLocation",
            "in": "query",
            "description": "Return the photo ID and location using an alternative CSV format",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "top",
            "in": "query",
            "description": "Limit the number of returned IDs (default 100)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/popular": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetPopularPhotosV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/{photoId}/thumbnails/{size}": {
      "get": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "GetThumbnailV1Api",
        "parameters": [
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/image"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "302": {
            "description": "This redirects to https://pics2.acmeaom.com/thumbs/{size}/{photoId}.jpg",
            "x-ms-summary": "The request will be redirected"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/{photoId}/likes/{userId}": {
      "put": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "LikePhotoV1Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "UnlikePhotoV1Api",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/{photoId}/likes": {
      "put": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "LikePhotoV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      },
      "delete": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "UnlikePhotoV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/{photoId}/share": {
      "put": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "ShareMyPhotoV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/upload": {
      "put": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Upload Photo Api V1",
        "description": "",
        "operationId": "UploadV1Api",
        "parameters": [
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "412": {
            "description": "The request failed to complete because a precondition was not met.",
            "x-ms-summary": "Precondition Failed"
          },
          "415": {
            "description": "The presented media type is not supported.",
            "x-ms-summary": "Unsupported Media Type"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/upload": {
      "post": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "Upload Photo Api V2",
        "description": "",
        "operationId": "UploadV2Api",
        "parameters": [
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "412": {
            "description": "The request failed to complete because a precondition was not met.",
            "x-ms-summary": "Precondition Failed"
          },
          "415": {
            "description": "The presented media type is not supported.",
            "x-ms-summary": "Unsupported Media Type"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/{photoId}/viewers/{viewerId}": {
      "put": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "View Photo Api V1",
        "description": "",
        "operationId": "ViewPhotoV1Api",
        "parameters": [
          {
            "name": "viewerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/photoV1"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v2/photos/{photoId}/viewers": {
      "put": {
        "tags": [
          "Photos_[photos.acmeaom.com]"
        ],
        "summary": "",
        "description": "",
        "operationId": "ViewPhotoV2Api",
        "parameters": [
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "This returns the response",
            "x-ms-summary": "The response"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/outlooks/current/5day/all ": {
      "get": {
        "tags": [
          "Outlooks_[outlooks.acmeaom.com]"
        ],
        "summary": "Gets 5 day outlooks",
        "description": "",
        "operationId": "GetCurrent5DayOutlooksAllV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/outlooks/reference/5day/all ": {
      "get": {
        "tags": [
          "Outlooks_[outlooks.acmeaom.com]"
        ],
        "summary": "Gets 5 day outlooks",
        "description": "",
        "operationId": "GetReference5DayOutlooksAllV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/newsarticles": {
      "get": {
        "tags": [
          "NewsArticles_[newsarticles.acmeaom.com]"
        ],
        "summary": "Gets the current news articles",
        "description": "Gathering data from newsarticles.acmeaom.com",
        "operationId": "GetNewsArticlesApi",
        "parameters": [
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/newsArticleViewItemV2"
                  }
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/searches": {
      "put": {
        "tags": [
          "NewsArticles_[newsarticles.acmeaom.com]"
        ],
        "summary": "Search request",
        "description": "This gets the name.",
        "operationId": "RequestSearchApi",
        "parameters": [
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request was accepted."
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "function_key": []
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/{rover}.{photoId}/image ": {
      "get": {
        "tags": [
          "MarsPhotos_[marsphotos.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns a photo by rover and photo id.  Had to qualify the function name to allow swagger-docs to compile properly because it conflicted with function in Photos.",
        "operationId": "GetMarsImageV1Api",
        "parameters": [
          {
            "name": "rover",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/{rover}.{photoId}/data": {
      "get": {
        "tags": [
          "MarsPhotos_[marsphotos.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns photo data by rover and photo id",
        "operationId": "GetPhotoDataApi",
        "parameters": [
          {
            "name": "rover",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/rovers/{roverId} ": {
      "get": {
        "tags": [
          "MarsPhotos_[marsphotos.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns all photos by rover id",
        "operationId": "GetRoverPhotosApi",
        "parameters": [
          {
            "name": "roverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/photos/{rover}.{photoId}/thumbnails/{size} ": {
      "get": {
        "tags": [
          "MarsPhotos_[marsphotos.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns a thumbnail image by rover, photoId and size",
        "operationId": "GetThumbnailApi",
        "parameters": [
          {
            "name": "rover",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photoId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "size",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/livestreams/published/{streamId}/viewers/{viewerId}": {
      "put": {
        "tags": [
          "LiveStreams_[livestreams.acmeaom.com]"
        ],
        "summary": "Add viewer to stream",
        "description": "Add viewer to stream",
        "operationId": "AddViewerV2Api",
        "parameters": [
          {
            "name": "streamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "viewerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The request was accepted."
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/livestreams/published ": {
      "get": {
        "tags": [
          "LiveStreams_[livestreams.acmeaom.com]"
        ],
        "summary": "Get published livestreams",
        "description": "Get published livestreams",
        "operationId": "GetLiveStreamsV2Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/liveStreamV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/livestreams/published/{streamId}/viewers/count": {
      "get": {
        "tags": [
          "LiveStreams_[livestreams.acmeaom.com]"
        ],
        "summary": "Get viewer count by stream id",
        "description": "Get viewer count by stream id",
        "operationId": "GetViewerCountV2Api",
        "parameters": [
          {
            "name": "streamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/liveStreamV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/lightning/flashes/{stamp} ": {
      "get": {
        "tags": [
          "Lightning_[lightning.acmeaom.com]"
        ],
        "summary": "",
        "description": "lightning.acmeaom.com",
        "operationId": "GetDefaultIntervalV2Api",
        "parameters": [
          {
            "name": "stamp",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/lightning/flashes/{interval}/{stamp} ": {
      "get": {
        "tags": [
          "Lightning_[lightning.acmeaom.com]"
        ],
        "summary": "",
        "description": "lightning.acmeaom.com",
        "operationId": "GetIntervalV2Api",
        "parameters": [
          {
            "name": "interval",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                1,
                5,
                15,
                30
              ],
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "stamp",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/lightning/flashes/{interval}/latest ": {
      "get": {
        "tags": [
          "Lightning_[lightning.acmeaom.com]"
        ],
        "summary": "",
        "description": "lightning.acmeaom.com",
        "operationId": "GetLatestV2Api",
        "parameters": [
          {
            "name": "interval",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                1,
                5,
                15,
                30
              ],
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/hotspots/noaa/current ": {
      "get": {
        "tags": [
          "HotSpots_[hotspots.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "GetCurrentNoaaHotspotsV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/hotspots/legend/metadata ": {
      "get": {
        "tags": [
          "HotSpots_[hotspots.acmeaom.com]"
        ],
        "summary": "GetLegendMetadataV1Api",
        "description": "Had to qualify the function name to allow swagger-docs to compile properly because it conflicted with function in Smoke.",
        "operationId": "GetHotspotsLegendMetadataV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/legendMetadataV1"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/reverse": {
      "get": {
        "tags": [
          "GeoCodes.net_[geocode.acmeaom.com]"
        ],
        "summary": "Reverse lookup",
        "description": "Reverse lookup",
        "operationId": "ReverseResponseV1",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lon",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reverseResponseV1"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "function_key": []
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/v1/latest/full/low ": {
      "get": {
        "tags": [
          "Fronts_[fronts.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "LatestFullLowApi",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "The resource was not found."
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/latest/full/high ": {
      "get": {
        "tags": [
          "Fronts_[fronts.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "LatestFullHighApi",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/latest/lite/low ": {
      "get": {
        "tags": [
          "Fronts_[fronts.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "LatestLiteLowApi",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/latest/lite/high ": {
      "get": {
        "tags": [
          "Fronts_[fronts.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "LatestLiteHighApi",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/weburls/{version}/{platform}": {
      "get": {
        "tags": [
          "Etc_[etc.acmeaom.com]"
        ],
        "summary": "Gets the etc data",
        "description": "Returns the etc data for the platform.",
        "operationId": "GetWebUrls6",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The JSON representation of a dictionary of properties in the etc data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            },
            "x-ms-summary": "The dictionary of properties."
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/devices/android/{installId}": {
      "put": {
        "tags": [
          "Devices_[devices.acmeaom.com]"
        ],
        "summary": "Registers an Android device",
        "description": "This registers an Android device on the system and provides access to the system resources.",
        "operationId": "RegisterAndroidDeviceV2Api",
        "parameters": [
          {
            "name": "installId",
            "in": "path",
            "description": "Formerly known as deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registrationResponseV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            },
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "function_key": []
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/v2/devices/ios/{installId}": {
      "put": {
        "tags": [
          "Devices_[devices.acmeaom.com]"
        ],
        "summary": "Registers an iOS device",
        "description": "This registers an iOS device on the system and provides access to the system resources.",
        "operationId": "RegisterIosDeviceV2Api",
        "parameters": [
          {
            "name": "installId",
            "in": "path",
            "description": "Formerly known as deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registrationResponseV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            },
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "function_key": []
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/v2/devices/windows/{installId}": {
      "put": {
        "tags": [
          "Devices_[devices.acmeaom.com]"
        ],
        "summary": "Registers an Windows device",
        "description": "This registers an Windows device on the system and provides access to the system resources.",
        "operationId": "RegisterWindowsDeviceV2Api",
        "parameters": [
          {
            "name": "installId",
            "in": "path",
            "description": "Formerly known as deviceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user-agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registrationResponseV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "403": {
            "description": "The requested resource is forbidden.",
            "x-ms-summary": "Forbidden"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            },
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "function_key": []
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/v2/cyclones/{id}": {
      "get": {
        "tags": [
          "Cyclones_[cyclones.acmeaom.com]"
        ],
        "summary": "Gets any cyclone details reference",
        "description": "This gets a reference to the details for any cyclone.",
        "operationId": "GetAnyByIdV2Api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/anyDetailReferenceResponseV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/v2/cyclones/current/{id}": {
      "get": {
        "tags": [
          "Cyclones_[cyclones.acmeaom.com]"
        ],
        "summary": "Gets current cyclone detail reference",
        "description": "This gets a reference to the detail for a current cyclone.",
        "operationId": "GetCurrentByIdV2Api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/currentDetailReferenceResponseV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/v2/cyclones/current/{id}/details": {
      "get": {
        "tags": [
          "Cyclones_[cyclones.acmeaom.com]"
        ],
        "summary": "Gets cyclone details",
        "description": "This gets the details for a current cyclone.",
        "operationId": "GetCurrentDetailsV2Api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/currentDetailsV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "advanced"
      }
    },
    "/v1/hurricanes/current": {
      "get": {
        "tags": [
          "Cyclones_[cyclones.acmeaom.com]"
        ],
        "summary": "Gets current cyclone features",
        "description": "This gets a collection of current cyclone features in an unconventional legacy v1 format.",
        "operationId": "GetCurrentFullFeaturesV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v2/cyclones/current/full": {
      "get": {
        "tags": [
          "Cyclones_[cyclones.acmeaom.com]"
        ],
        "summary": "Gets current cyclone features",
        "description": "This gets a complete detail collection of current cyclone features.",
        "operationId": "GetCurrentFullFeaturesV2Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/cyclones/current/lite": {
      "get": {
        "tags": [
          "Cyclones_[cyclones.acmeaom.com]"
        ],
        "summary": "Gets current cyclone features",
        "description": "This gets a reduced detail collection of current cyclone features.",
        "operationId": "GetCurrentLiteFeaturesV2Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/cyclones/active/{id}/hide": {
      "put": {
        "tags": [
          "Cyclones_[cyclones.acmeaom.com]"
        ],
        "summary": "Hides a cyclone",
        "description": "This hides an active cyclone from being included in the features.",
        "operationId": "HideActiveCycloneApi",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The request was successful.",
            "x-ms-summary": "No content"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "function_key": []
          }
        ],
        "x-ms-visibility": "advanced"
      }
    },
    "/v1/hurricanes/historical/{id}": {
      "get": {
        "tags": [
          "Cyclones_Historic_[cycloneshistoric.acmeaom.com]"
        ],
        "summary": "Gets historical hurricane by ID",
        "description": "This gets an historical hurricane in an unconventional legacy v1 format.",
        "operationId": "GetHistoricalByIdV1Api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/historicalListingItemV1"
                  }
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v2/cyclones/historical/{id}": {
      "get": {
        "tags": [
          "Cyclones_Historic_[cycloneshistoric.acmeaom.com]"
        ],
        "summary": "Gets historical cyclone details reference",
        "description": "This gets a reference to the details for an historical cyclone.",
        "operationId": "GetHistoricalByIdV2Api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/historicalDetailReferenceResponseV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/cyclones/historical/{id}/details": {
      "get": {
        "tags": [
          "Cyclones_Historic_[cycloneshistoric.acmeaom.com]"
        ],
        "summary": "Gets cyclone details",
        "description": "This gets the details for an historical cyclone.",
        "operationId": "GetHistoricalDetailsV2Api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/historicalDetailsV2"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/hurricanes/historical": {
      "get": {
        "tags": [
          "Cyclones_Historic_[cycloneshistoric.acmeaom.com]"
        ],
        "summary": "Gets historical cyclone listing",
        "description": "This gets a complete listing of historical hurricanes.",
        "operationId": "GetHistoricalFullListingV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/historicalListingItemV1"
                  }
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v2/cyclones/historical/full": {
      "get": {
        "tags": [
          "Cyclones_Historic_[cycloneshistoric.acmeaom.com]"
        ],
        "summary": "Gets historical cyclone listing",
        "description": "This gets a complete listing of historical cyclones.",
        "operationId": "GetHistoricalFullListingV2Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/historicalListingItemV2"
                  }
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/cyclones/historical/{id}/reports": {
      "get": {
        "tags": [
          "Cyclones_Historic_[cycloneshistoric.acmeaom.com]"
        ],
        "summary": "Gets historical cyclone reports",
        "description": "This gets the features of all reports for an historical cyclone.",
        "operationId": "GetHistoricalReportsV2Api",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featureCollection"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "301": {
            "description": "The requested resource has moved permanently.",
            "x-ms-summary": "Moved permanently"
          },
          "307": {
            "description": "The requested resource has moved temporarily.",
            "x-ms-summary": "Temporary redirect"
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/images/tempstripes/{lat:double}_{lon:double} ": {
      "get": {
        "tags": [
          "ClimateStripe_[climatestripe.acmeaom.com]"
        ],
        "summary": "Returns image indicating results.",
        "description": "This returns an image displaying temperature changes through time.",
        "operationId": "GetTempStripeApi",
        "parameters": [
          {
            "name": "lat:double",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lon:double",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an image representing of the response to the submission.",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "x-ms-summary": "Image respnose"
          },
          "404": {
            "description": "The requested resource was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Not found"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v2/subscriptions/apple/{installId}/{receiptId}": {
      "get": {
        "tags": [
          "Billing_[billing.acmeaom.com]"
        ],
        "summary": "Gets IAPs for an installation by verified receipt ID",
        "description": "Returns the set of IAPs (subscriptions) for an installation for a verified receipt ID.",
        "operationId": "GetAppleSubscriptions",
        "parameters": [
          {
            "name": "installId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the JSON representation of IAPs (subscriptions) or error details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/appleResponseViewV2"
                }
              }
            },
            "x-ms-summary": "Returns the IAPs or error"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "sas_token_sig": []
          },
          {
            "sas_token_sv": []
          }
        ],
        "x-ms-visibility": "important"
      },
      "put": {
        "tags": [
          "Billing_[billing.acmeaom.com]"
        ],
        "summary": "Submit Apple receipt for verification",
        "description": "Submit a URL to an uploaded Apple receipt for verification.",
        "operationId": "SubmitAppleReceipt",
        "parameters": [
          {
            "name": "installId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/submitReceiptRequestDataV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the JSON representation of the response to the submission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/submitReceiptResponseDataV2"
                }
              }
            },
            "x-ms-summary": "Returns a submission response"
          },
          "202": {
            "description": "Returns the JSON representation of the response to the submission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/submitReceiptResponseDataV2"
                }
              }
            },
            "x-ms-summary": "Returns a submission response"
          },
          "401": {
            "description": "The request could not be authorized.",
            "x-ms-summary": "Unauthorized"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/problemDetails"
                }
              }
            },
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "function_key": []
          }
        ],
        "x-ms-visibility": "important"
      }
    },
    "/v1/receipts/verify": {
      "post": {
        "tags": [
          "Billing_[billing.acmeaom.com]"
        ],
        "summary": "Verify Apple receipt data",
        "description": "Returns the results of verifying an Apple receipt.",
        "operationId": "VerifyReceipt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/receiptDataEnvelopeV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the JSON representation of the verified receipt.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/appleSubscriptionsViewV1"
                }
              }
            },
            "x-ms-summary": "Returns the subscriptions in the receipt"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v1/receipts/verify/{installId}": {
      "post": {
        "tags": [
          "Billing_[billing.acmeaom.com]"
        ],
        "summary": "Verify Apple receipt data",
        "description": "Returns the results of verifying an Apple receipt.",
        "operationId": "VerifyReceiptByInstallId",
        "parameters": [
          {
            "name": "installId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/receiptDataEnvelopeV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the JSON representation of the verified receipt.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/appleSubscriptionsViewV1"
                }
              }
            },
            "x-ms-summary": "Returns the subscriptions in the receipt"
          },
          "400": {
            "description": "The request body or headers were bad.",
            "x-ms-summary": "Bad request"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "x-ms-summary": "Internal server error"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important"
      }
    },
    "/v1/authenticate": {
      "get": {
        "tags": [
          "AuthC_[authc.acmeaom.com]"
        ],
        "summary": "The response",
        "description": "This returns the response",
        "operationId": "AuthenticateV1Api",
        "responses": {
          "200": {
            "description": "This returns the response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "x-ms-summary": "The response"
          },
          "408": {
            "description": "The request failed to complete within the configured timeout.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Timed out"
          },
          "429": {
            "description": "The client has made too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Too many requests"
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Internal server error"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/v1/accounts": {
      "delete": {
        "tags": [
          "Accounts_[accounts.acmeaom.com]"
        ],
        "summary": "Submit request for account deactivation",
        "description": "JWT payload is submitted to request deactivation of account.",
        "operationId": "DeactivateAccountV1",
        "parameters": [
          {
            "name": "log-request",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request was accepted and will be handled asynchronously.",
            "x-ms-summary": "The request has been accepted."
          },
          "404": {
            "description": "The requested resource was not found.",
            "x-ms-summary": "The resource was not found."
          },
          "422": {
            "description": "The server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions.",
            "x-ms-summary": "The request entity could not be processed."
          },
          "500": {
            "description": "An unexpected failure occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/void"
                }
              }
            },
            "x-ms-summary": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ],
        "x-ms-visibility": "important"
      }
    }
  },
  "components": {
    "schemas": {
      "address": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "ocean": {
            "type": "string"
          }
        }
      },
      "anyDetailReferenceResponseV2": {
        "required": [
          "id",
          "active",
          "details"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "details": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "appleResponseViewV2": {
        "required": [
          "installId",
          "status",
          "receiptId"
        ],
        "type": "object",
        "properties": {
          "installId": {
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "receiptId": {
            "minLength": 1,
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "subscriptions": {
            "$ref": "#/components/schemas/appleSubscriptionsViewV2"
          }
        }
      },
      "appleSubscription": {
        "required": [
          "productId",
          "transactionId",
          "purchaseDate"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "minLength": 1,
            "type": "string"
          },
          "transactionId": {
            "minLength": 1,
            "type": "string"
          },
          "purchaseDate": {
            "minLength": 1,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expirationIntent": {
            "type": "string"
          },
          "cancellationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancellationReason": {
            "type": "string"
          },
          "autoRenewProductId": {
            "type": "string"
          },
          "autoRenewStatus": {
            "type": "string"
          },
          "isInBillingRetryPeriod": {
            "type": "string"
          },
          "isEligibleForTrial": {
            "type": "boolean"
          }
        }
      },
      "appleSubscriptionsViewV1": {
        "required": [
          "deviceId"
        ],
        "type": "object",
        "properties": {
          "deviceId": {
            "minLength": 1,
            "type": "string"
          },
          "active": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/appleSubscription"
            }
          },
          "inactive": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/appleSubscription"
            }
          }
        }
      },
      "appleSubscriptionsViewV2": {
        "required": [
          "active",
          "inactive"
        ],
        "type": "object",
        "properties": {
          "active": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/appleSubscriptionViewV2"
            }
          },
          "inactive": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/appleSubscriptionViewV2"
            }
          }
        }
      },
      "appleSubscriptionViewV2": {
        "required": [
          "productId",
          "transactionId",
          "purchaseDate"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "minLength": 1,
            "type": "string"
          },
          "transactionId": {
            "minLength": 1,
            "type": "string"
          },
          "purchaseDate": {
            "minLength": 1,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expirationIntent": {
            "type": "string"
          },
          "autoRenewProductId": {
            "type": "string"
          },
          "autoRenewStatus": {
            "type": "string"
          },
          "isInBillingRetryPeriod": {
            "type": "string"
          },
          "isEligibleForTrial": {
            "type": "boolean"
          }
        }
      },
      "currentDetailReferenceResponseV2": {
        "required": [
          "id",
          "details"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "details": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "currentDetailsV2": {
        "required": [
          "id",
          "displayName",
          "displayTitle",
          "displayTitleAlternate",
          "displayPhenomenon",
          "displayDiscussion",
          "displayLocation",
          "displayWinds",
          "displayGusts",
          "displayHeading",
          "displayGroundspeed",
          "displayPressure",
          "displayDate",
          "displayDateNoaa"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "minLength": 1,
            "type": "string"
          },
          "displayTitle": {
            "minLength": 1,
            "type": "string"
          },
          "displayTitleAlternate": {
            "minLength": 1,
            "type": "string"
          },
          "displayPhenomenon": {
            "minLength": 1,
            "type": "string"
          },
          "displayDiscussion": {
            "minLength": 1,
            "type": "string"
          },
          "displayLocation": {
            "minLength": 1,
            "type": "string"
          },
          "displayWinds": {
            "minLength": 1,
            "type": "string"
          },
          "displayGusts": {
            "minLength": 1,
            "type": "string"
          },
          "displayHeading": {
            "minLength": 1,
            "type": "string"
          },
          "displayGroundspeed": {
            "minLength": 1,
            "type": "string"
          },
          "displayPressure": {
            "minLength": 1,
            "type": "string"
          },
          "displayDate": {
            "minLength": 1,
            "type": "string"
          },
          "displayDateNoaa": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "EarthquakeDetail": {
        "required": [
          "id",
          "displaytitle",
          "displaylocation",
          "displaydatetime",
          "displayalert",
          "displaystatus",
          "displaymagnitude",
          "displaysignificance",
          "displaydepth",
          "displayrms",
          "displaycdi",
          "displaygap"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "place": {
            "type": "string"
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "datetimeepochsec": {
            "type": "integer",
            "format": "int64"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          },
          "magnitude": {
            "type": "number",
            "format": "double"
          },
          "magnitudeType": {
            "type": "string"
          },
          "alert": {
            "type": "string"
          },
          "gap": {
            "type": "number",
            "format": "double"
          },
          "rms": {
            "type": "number",
            "format": "double"
          },
          "sig": {
            "type": "number",
            "format": "double"
          },
          "cdi": {
            "type": "number",
            "format": "double"
          },
          "depth": {
            "type": "number",
            "format": "double"
          },
          "displaytitle": {
            "minLength": 1,
            "type": "string"
          },
          "displaylocation": {
            "minLength": 1,
            "type": "string"
          },
          "displaydatetime": {
            "minLength": 1,
            "type": "string"
          },
          "displayalert": {
            "minLength": 1,
            "type": "string"
          },
          "displaystatus": {
            "minLength": 1,
            "type": "string"
          },
          "displaymagnitude": {
            "minLength": 1,
            "type": "string"
          },
          "displaysignificance": {
            "minLength": 1,
            "type": "string"
          },
          "displaydepth": {
            "minLength": 1,
            "type": "string"
          },
          "displayrms": {
            "minLength": 1,
            "type": "string"
          },
          "displaycdi": {
            "minLength": 1,
            "type": "string"
          },
          "displaygap": {
            "minLength": 1,
            "type": "string"
          },
          "articles": {
            "type": "string"
          }
        }
      },
      "feature": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "id": {
            "type": "string"
          },
          "geometry": {
            "$ref": "#/components/schemas/iGeometryObject"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "featureCollection": {
        "required": [
          "type",
          "features"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/feature"
            }
          }
        }
      },
      "getRegistrationV2ResponseData": {
        "required": [
          "installId"
        ],
        "type": "object",
        "properties": {
          "installId": {
            "minLength": 1,
            "type": "string"
          },
          "deviceToken": {
            "type": "string"
          }
        }
      },
      "historicalDetailReferenceResponseV2": {
        "required": [
          "id",
          "details"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "details": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "historicalDetailsV2": {
        "required": [
          "id",
          "displayName",
          "displayTitle",
          "displayTitleAternate",
          "displayPhenomenon",
          "displayDiscussion",
          "displayLocation",
          "displayWinds",
          "displayGusts",
          "displayHeading",
          "displayGroundspeed",
          "displayPressure",
          "displayDate",
          "displayDateNoaa"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "minLength": 1,
            "type": "string"
          },
          "displayTitle": {
            "minLength": 1,
            "type": "string"
          },
          "displayTitleAternate": {
            "minLength": 1,
            "type": "string"
          },
          "displayPhenomenon": {
            "minLength": 1,
            "type": "string"
          },
          "displayDiscussion": {
            "minLength": 1,
            "type": "string"
          },
          "displayLocation": {
            "minLength": 1,
            "type": "string"
          },
          "displayWinds": {
            "minLength": 1,
            "type": "string"
          },
          "displayGusts": {
            "minLength": 1,
            "type": "string"
          },
          "displayHeading": {
            "minLength": 1,
            "type": "string"
          },
          "displayGroundspeed": {
            "minLength": 1,
            "type": "string"
          },
          "displayPressure": {
            "minLength": 1,
            "type": "string"
          },
          "displayDate": {
            "minLength": 1,
            "type": "string"
          },
          "displayDateNoaa": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "historicalListingItemV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nwcId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "discussion": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "maxSustainedWind": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "firstUpdate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "displayIconText": {
            "type": "string"
          },
          "displayIconColor": {
            "type": "string"
          },
          "displayClass": {
            "type": "string"
          },
          "oceanBasin": {
            "type": "string"
          }
        }
      },
      "historicalListingItemV2": {
        "required": [
          "id",
          "name",
          "year",
          "month",
          "oceanBasin",
          "displayIconText",
          "displayIconColor",
          "reports",
          "details"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "oceanBasin": {
            "minLength": 1,
            "type": "string"
          },
          "displayIconText": {
            "minLength": 1,
            "type": "string"
          },
          "displayIconColor": {
            "minLength": 1,
            "type": "string"
          },
          "reports": {
            "minLength": 1,
            "type": "string"
          },
          "details": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "iGeometryObject": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      },
      "image": {
        "type": "object"
      },
      "legendItem": {
        "required": [
          "name",
          "color"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "color": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "legendMetadataV1": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/legendItem"
            }
          }
        }
      },
      "liveStreamV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "httplivestreamurl": {
            "type": "string"
          },
          "thumbnailimage52": {
            "type": "string"
          },
          "thumbnailimage104": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "locality": {
            "type": "string"
          },
          "currentviewercount": {
            "type": "integer",
            "format": "int64"
          },
          "approximateviewercount": {
            "type": "integer",
            "format": "int64"
          },
          "lastupdated": {
            "type": "string",
            "format": "date-time"
          },
          "streamerusername": {
            "type": "string"
          },
          "streamerorganization": {
            "type": "string"
          },
          "streamerfirstname": {
            "type": "string"
          },
          "streamelLastname": {
            "type": "string"
          },
          "streamerfacebookurl": {
            "type": "string"
          },
          "streamertwitterhandle": {
            "type": "string"
          },
          "streameryouTtubeurl": {
            "type": "string"
          },
          "streamerwebsiteurl": {
            "type": "string"
          }
        }
      },
      "newsArticleViewItemV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "confidence": {
            "type": "number",
            "format": "double"
          },
          "link": {
            "type": "string"
          }
        }
      },
      "photoCommentV1": {
        "required": [
          "id",
          "created",
          "text"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "created": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "text": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          }
        }
      },
      "photoCommentV2": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "photoV1": {
        "type": "object",
        "properties": {
          "epochDate": {
            "type": "integer",
            "format": "int64"
          },
          "locationDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "likeCount": {
            "type": "integer",
            "format": "int32"
          },
          "flagCount": {
            "type": "integer",
            "format": "int32"
          },
          "viewCount": {
            "type": "integer",
            "format": "int32"
          },
          "commentCount": {
            "type": "integer",
            "format": "int32"
          },
          "author": {
            "type": "string"
          },
          "rated": {
            "type": "string"
          }
        }
      },
      "photoV2": {
        "type": "object",
        "properties": {
          "published": {
            "type": "string",
            "format": "date-time"
          },
          "publisher": {
            "type": "string"
          },
          "locationDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "commentCount": {
            "type": "integer",
            "format": "int32"
          },
          "likeCount": {
            "type": "integer",
            "format": "int32"
          },
          "flagCount": {
            "type": "integer",
            "format": "int32"
          },
          "viewCount": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string"
          }
        }
      },
      "problemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "profileV1": {
        "required": [
          "id",
          "created"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "created": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "receiptDataEnvelopeV1": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "registrationResponseV2": {
        "required": [
          "url",
          "token",
          "expiration",
          "updateIntervalInSeconds"
        ],
        "type": "object",
        "properties": {
          "url": {
            "minLength": 1,
            "type": "string"
          },
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "expiration": {
            "minLength": 1,
            "type": "string",
            "format": "date-time"
          },
          "updateIntervalInSeconds": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "reverseResponseV1": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          }
        }
      },
      "satellitesV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "orbitUrl": {
            "type": "string"
          }
        }
      },
      "submitConsentRequestDataV2": {
        "required": [
          "version"
        ],
        "type": "object",
        "properties": {
          "version": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "submitReceiptRequestDataV2": {
        "required": [
          "receiptUrl"
        ],
        "type": "object",
        "properties": {
          "receiptUrl": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "submitReceiptResponseDataV2": {
        "required": [
          "subscriptionsUrl",
          "status"
        ],
        "type": "object",
        "properties": {
          "subscriptionsUrl": {
            "minLength": 1,
            "type": "string"
          },
          "status": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      },
      "text": {
        "type": "object"
      },
      "updateProfileRequestDataV1": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          }
        }
      },
      "void": {
        "type": "object"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please insert JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      },
      "function_key": {
        "type": "apiKey",
        "name": "x-functions-key",
        "in": "header"
      },
      "sas_token_sig": {
        "type": "apiKey",
        "name": "sig",
        "in": "query"
      },
      "sas_token_sv": {
        "type": "apiKey",
        "name": "sv",
        "in": "query"
      }
    }
  }
}